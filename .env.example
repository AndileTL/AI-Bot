# Rename this file to .env once you have filled in the below environment variables!

# Get your GROQ API Key here -
# https://console.groq.com/keys
# You only need this environment variable set if you want to use Groq models
GROQ_API_KEY=

# Get your HuggingFace API Key here -
# https://huggingface.co/settings/tokens
# You only need this environment variable set if you want to use HuggingFace models
HuggingFace_API_KEY=


# Get your Open AI API Key by following these instructions -
# https://help.openai.com/en/articles/4936850-where-do-i-find-my-openai-api-key
# You only need this environment variable set if you want to use GPT models
OPENAI_API_KEY=

# Get your Anthropic API Key in your account settings -
# https://console.anthropic.com/settings/keys
# You only need this environment variable set if you want to use Claude models
ANTHROPIC_API_KEY=

# Get your OpenRouter API Key in your account settings -
# https://openrouter.ai/settings/keys
# You only need this environment variable set if you want to use OpenRouter models
OPEN_ROUTER_API_KEY=

# Get your Google Generative AI API Key by following these instructions -
# https://console.cloud.google.com/apis/credentials
# You only need this environment variable set if you want to use Google Generative AI models
GOOGLE_GENERATIVE_AI_API_KEY=

# You only need this environment variable set if you want to use oLLAMA models
# DONT USE http://localhost:11434 due to IPV6 issues
# USE EXAMPLE http://127.0.0.1:11434
OLLAMA_API_BASE_URL=

# You only need this environment variable set if you want to use OpenAI Like models
OPENAI_LIKE_API_BASE_URL=

# You only need this environment variable set if you want to use Together AI models
TOGETHER_API_BASE_URL=

# You only need this environment variable set if you want to use DeepSeek models through their API
DEEPSEEK_API_KEY=

# Get your OpenAI Like API Key
OPENAI_LIKE_API_KEY=

# Get your Together API Key
TOGETHER_API_KEY=

# You only need this environment variable set if you want to use Hyperbolic models
#Get your Hyperbolics API Key at https://app.hyperbolic.xyz/settings
#baseURL="https://api.hyperbolic.xyz/v1/chat/completions"
HYPERBOLIC_API_KEY=
HYPERBOLIC_API_BASE_URL=

# Get your Mistral API Key by following these instructions -
# https://console.mistral.ai/api-keys/
# You only need this environment variable set if you want to use Mistral models
MISTRAL_API_KEY=

# Get the Cohere Api key by following these instructions -
# https://dashboard.cohere.com/api-keys
# You only need this environment variable set if you want to use Cohere models
COHERE_API_KEY=

# Get LMStudio Base URL from LM Studio Developer Console
# Make sure to enable CORS
# DONT USE http://localhost:1234 due to IPV6 issues
# Example: http://127.0.0.1:1234
LMSTUDIO_API_BASE_URL=

# Get your xAI API key
# https://x.ai/api
# You only need this environment variable set if you want to use xAI models
XAI_API_KEY=

# Get your Perplexity API Key here - 
# https://www.perplexity.ai/settings/api
# You only need this environment variable set if you want to use Perplexity models
PERPLEXITY_API_KEY=

# Get your AWS configuration
# https://console.aws.amazon.com/iam/home
# The JSON should include the following keys:
#   - region: The AWS region where Bedrock is available.
#   - accessKeyId: Your AWS access key ID.
#   - secretAccessKey: Your AWS secret access key.
#   - sessionToken (optional): Temporary session token if using an IAM role or temporary credentials.
# Example JSON:
# {"region": "us-east-1", "accessKeyId": "yourAccessKeyId", "secretAccessKey": "yourSecretAccessKey", "sessionToken": "yourSessionToken"}
AWS_BEDROCK_CONFIG=

# Get your Serper.dev API key for web search functionality
# https://serper.dev/ (offers free tier with 2,500 searches/month)
# This API key is used for the web search feature to query Google, DuckDuckGo and academic sources
# 
# Alternative search providers (if preferred):
# 1. Google Custom Search API:
#    - Visit https://console.cloud.google.com/
#    - Create a project and enable the Custom Search API
#    - Generate API credentials and set up a Custom Search Engine (CSE) ID
#    - Free tier: 100 queries/day, then pay-as-you-go
#
# 2. Bing Search API:
#    - Visit https://www.microsoft.com/en-us/bing/apis/bing-web-search-api
#    - Sign up for Microsoft Azure
#    - Create a Bing Search resource
#    - Free tier: 1,000 queries/month
SERPER_API_KEY=

# Bing Search API Key for web search as an alternative to Serper.dev
# Get a key at: https://www.microsoft.com/en-us/bing/apis/bing-web-search-api
# Offers 1,000 free searches per month through Azure
BING_SEARCH_API_KEY=

# Google Custom Search API for web search as an alternative to Serper.dev
# Get an API key at: https://console.cloud.google.com/
# Create a CSE ID at: https://cse.google.com/cse/all
# Free tier: 100 queries/day, then pay-as-you-go
GOOGLE_API_KEY=
GOOGLE_CSE_ID=

# NOTE: You can use either SERPER_API_KEY, BING_SEARCH_API_KEY, GOOGLE_API_KEY+GOOGLE_CSE_ID, or all.
# The application will automatically select the best provider based on your query.
# You can also use PERPLEXITY_API_KEY for integrated search (set above).
# If no API keys are provided, the application will use a local fallback search.

# Include this environment variable if you want more logging for debugging locally
VITE_LOG_LEVEL=debug

# Get your GitHub Personal Access Token here -
# https://github.com/settings/tokens
# This token is used for:
# 1. Importing/cloning GitHub repositories without rate limiting
# 2. Accessing private repositories
# 3. Automatic GitHub authentication (no need to manually connect in the UI)
# 
# For classic tokens, ensure it has these scopes: repo, read:org, read:user
# For fine-grained tokens, ensure it has Repository and Organization access
# If you encounter a 500 Internal Server Error during clone operations, try generating a new token
VITE_GITHUB_ACCESS_TOKEN=

# Specify the type of GitHub token you're using
# Can be 'classic' or 'fine-grained'
# Classic tokens are recommended for broader access
VITE_GITHUB_TOKEN_TYPE=classic

# Netlify Authentication
VITE_NETLIFY_ACCESS_TOKEN=

# Example Context Values for qwen2.5-coder:32b
# 
# DEFAULT_NUM_CTX=32768 # Consumes 36GB of VRAM
# DEFAULT_NUM_CTX=24576 # Consumes 32GB of VRAM
# DEFAULT_NUM_CTX=12288 # Consumes 26GB of VRAM
# DEFAULT_NUM_CTX=6144 # Consumes 24GB of VRAM
DEFAULT_NUM_CTX=
